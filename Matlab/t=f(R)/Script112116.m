clear; clc; close all;
 
%% Zmienne globalne
 
global A J C R H_THR L_THR H_VOUT L_VOUT VcapFun;
% współczynniki korekcji 
A = [-4.6443*1E19 2.7930*1E10 -4.4837 3.2231*1E-10];
J = -400E-12;          % prąd Ibias komparatorów
R = 385100;           % rezystancja pomiarowa
 
H_THR = 3.3500;       % próg napięcia referencyjnego (H)
L_THR = 1.6770;       % próg napięcia referencyjnego (L)
 
H_VOUT = 5.0230;      % napięcie stanu logicznego '1' na wyjściu bufora
L_VOUT = 0.0000;      % napięcie stanu logicznego '0' na wyjściu bufora
 
TCNT_min = 50;        % minimalna liczba taktów zegara podczas pomiaru
                      % ograniczenie spowodowane czasem trwania przerwania
TCNT_max = 2048;      % maksymalna liczba taktów zegara podczas pomiaru
                      % ograniczenie przez ilość próbek do oversamplingu
 
%% Rozwiązanie matematyczne układu
 
syms s t Jbias Cap Res Vout Vcstart Vcstop;
Flaplace(Cap, Res, s, Vout, Vcstart, Vcstop, Jbias) = ...
    (Cap * Vcstart + Vout / Res / s - Jbias / s) / (1 / Res + s * Cap);
VcapFun = ilaplace(Flaplace) == Vcstop;
 
% maksymalny zakres badanych pojemności
[C_min, C_max] = CapacityRange(TCNT_min, TCNT_max);
 
%% Measurements Results
 
DischargingProbes = [
    980, 982, 980, 981, 981, 980, 983, 985, 986, 987, 988, 986, 27, 988, 988, 984, 33, 985, 26, 24, 987, 984, 983, 32, 989, 983, 984, 984, 34, 985, 33, 985, 34, 35, 35, 987, 35, 991, 986, 984, 986, 986, 987, 988, 988, 992, 989, 34, 35, 993, 988, 987, 986, 986, 985, 987, 987, 988, 989, 990, 990, 992, 996, 34; 
    1096, 1107, 1118, 1123, 1124, 1124, 1124, 13, 1134, 1121, 1120, 1114, 1114, 1115, 1118, 1119, 1117, 11, 1131, 1119, 1116, 1116, 15, 1127, 1117, 1114, 1103, 1100, 1097, 1094, 1096, 1101, 1101, 1100, 1099, 1098, 1097, 1094, 1092, 1092, 1095, 1091, 1095, 1098, 1096, 1092, 1088, 1084, 1085, 1081, 1084, 1080, 1081, 1080, 7, 1092, 1079, 1082, 1077, 1080, 1084, 1086, 1088, 1089; 
    1072, 1086, 1099, 1103, 1113, 1110, 1109, 1113, 1121, 1118, 1124, 8, 1134, 1124, 1124, 1133, 1144, 1147, 11, 1165, 1151, 1151, 1148, 8, 1164, 1153, 1153, 1156, 1161, 1162, 14, 1177, 1169, 10, 1176, 1162, 13, 1172, 1162, 13, 1182, 1174, 1178, 1181, 1175, 1176, 1177, 1174, 9, 1192, 1181, 1183, 1184, 1183, 1177, 1174, 1169, 1169, 1168, 1170, 1158, 1159, 1160, 1164; 
    1125, 1136, 1146, 1148, 9, 1156, 1133, 1131, 1132, 1133, 1134, 1139, 1137, 1137, 1137, 1134, 1133, 1132, 1132, 1132, 1136, 1141, 1142, 1137, 1131, 1127, 1124, 1125, 1131, 1128, 1127, 1125, 1126, 1121, 1126, 1122, 1127, 1133, 1136, 1138, 1138, 1142, 1152, 1154, 1151, 1147, 1145, 1137, 1133, 1138, 1141, 1143, 1147, 1152, 1157, 1161, 1165, 1166, 1167, 1163, 1162, 1164, 1165, 1167; 
    1174, 1187, 1193, 1197, 1201, 1205, 1206, 1198, 1183, 1187, 1182, 1185, 1188, 1193, 1192, 1192, 1189, 1185, 1186, 1184, 1182, 1185, 7, 1205, 1194, 1190, 1183, 1177, 1172, 1172, 1179, 1177, 1175, 1176, 1175, 1175, 1174, 1174, 1182, 1182, 1186, 1188, 1190, 1195, 1201, 1205, 1206, 1198, 1190, 1182, 1184, 1187, 1194, 1199, 1206, 1208, 1214, 1219, 1217, 1216, 1218, 1217, 1218, 1220; 
    999, 1001, 1004, 1004, 1005, 1007, 1007, 1007, 36, 1011, 1009, 1007, 36, 1009, 1007, 34, 1009, 1007, 1007, 1006, 1004, 1003, 36, 15, 1009, 1006, 1006, 1007, 1009, 1011, 1009, 1009, 36, 1011, 1007, 35, 1008, 1006, 1005, 1005, 36, 1007, 1005, 1004, 1004, 26, 1, 1007, 1005, 1008, 1004, 37, 1007, 1004, 1004, 1003, 1003, 1002, 1000, 998, 36, 1001, 24, 1001; 
    984, 985, 985, 985, 986, 988, 988, 990, 988, 989, 989, 989, 989, 989, 990, 35, 991, 992, 991, 992, 993, 21, 996, 993, 995, 994, 996, 35, 997, 35, 997, 994, 35, 995, 992, 992, 997, 36, 996, 34, 34, 998, 996, 997, 998, 997, 998, 30, 36, 36, 1002, 998, 1005, 35, 1000, 998, 998, 999, 1001, 999, 999, 36, 1001, 998; 
    1039, 1048, 1053, 1057, 1058, 1061, 20, 1072, 1063, 1063, 1061, 1062, 1064, 1069, 1075, 1073, 1075, 1072, 1073, 1073, 1074, 1074, 11, 29, 1090, 1079, 24, 28, 1093, 1081, 1076, 1073, 1073, 1073, 1071, 1072, 1070, 1068, 1066, 1066, 1068, 1069, 1070, 26, 1084, 1075, 1075, 1073, 1073, 1069, 1069, 1074, 1069, 1061, 1062, 1061, 19, 1071, 1063, 1064, 1064, 1062, 1063, 1061; 
    1074, 1083, 1089, 1089, 1088, 1088, 1086, 1090, 1089, 18, 19, 1102, 1086, 19, 1095, 20, 1096, 1090, 1092, 1096, 1099, 1098, 24, 1105, 1100, 1091, 1090, 1089, 1086, 15, 1095, 1085, 25, 27, 1098, 1087, 1085, 1085, 1084, 1085, 1083, 1084, 1083, 1083, 1083, 1076, 1071, 1070, 1067, 1069, 1068, 1069, 1071, 1070, 1071, 1069, 1066, 1065, 1066, 1064, 1064, 1066, 1064, 1069; 
    12, 1075, 1076, 1078, 1076, 1073, 10, 1083, 1073, 1080, 1078, 1077, 1078, 1079, 1078, 1077, 1076, 1075, 1080, 1083, 19, 1096, 1087, 1087, 1089, 1093, 1097, 1097, 1097, 1094, 1093, 1086, 1085, 1089, 1088, 1092, 1098, 1103, 1102, 1104, 1109, 1107, 1108, 1109, 1109, 1108, 1108, 1110, 1113, 1113, 1110, 1112, 1116, 1126, 1131, 1132, 1133, 10, 1144, 1133, 1136, 1132, 11, 1143; 
    1096, 1112, 1127, 1134, 1136, 1140, 1135, 1137, 1138, 1138, 1139, 9, 16, 1162, 1150, 1151, 1153, 1152, 1153, 13, 1162, 1148, 1148, 1153, 1160, 19, 10, 1182, 1166, 1167, 1164, 1163, 1165, 1165, 11, 1179, 1169, 1168, 1170, 1168, 12, 1174, 1162, 1160, 1159, 1158, 1153, 1150, 1150, 1154, 1154, 1157, 1165, 1166, 1161, 9, 18, 22, 1186, 1159, 1154, 18, 1164, 1152; 
    1099, 1105, 1108, 1116, 1114, 1122, 1128, 8, 1142, 1136, 1141, 1143, 10, 1155, 1145, 1141, 1143, 1145, 1144, 1150, 1149, 1148, 1149, 1157, 1167, 1171, 1174, 1172, 11, 1188, 1170, 1170, 1171, 1172, 1182, 1179, 1179, 13, 1193, 1182, 1178, 1179, 12, 1187, 1179, 1182, 1187, 1191, 1190, 1190, 1185, 1194, 1188, 1188, 1188, 1191, 1191, 1191, 1185, 1185, 1179, 1177, 1180, 1177; 
    1140, 1149, 1157, 1163, 1168, 1178, 1179, 1177, 1180, 12, 9, 1194, 1172, 1169, 1166, 1162, 1164, 1165, 1167, 1167, 1168, 1168, 1164, 1164, 1165, 1167, 1166, 1158, 1148, 1147, 1146, 1147, 1151, 1152, 1152, 14, 1161, 1148, 1147, 1146, 1145, 1144, 1147, 1145, 1148, 1151, 1150, 1146, 10, 1152, 1136, 1134, 1137, 1140, 1134, 1133, 1136, 1136, 1135, 10, 1143, 1136, 1139, 1141; 
    1160, 1171, 1174, 1179, 1174, 1171, 1170, 10, 1184, 1166, 1168, 1169, 1170, 1174, 1171, 1173, 1170, 1169, 1168, 1171, 1172, 1163, 1156, 1153, 1151, 1157, 10, 1169, 1158, 1158, 1157, 1154, 1154, 1151, 1151, 1150, 1149, 1152, 1154, 1157, 1156, 1154, 1146, 1142, 1140, 1142, 1144, 1141, 1141, 1141, 1142, 1141, 1140, 1141, 1144, 1148, 1151, 1154, 1156, 8, 1165, 1158, 1161, 1159; 
    1143, 1151, 1153, 1159, 1161, 1166, 1165, 1165, 1173, 1186, 1192, 1196, 1196, 1194, 1190, 1196, 1196, 1197, 1197, 7, 1219, 1203, 12, 1221, 1207, 9, 8, 1229, 1204, 1200, 1201, 1209, 1212, 1219, 1220, 8, 1232, 7, 1232, 7, 1235, 1218, 1219, 1218, 1220, 1223, 1217, 1211, 9, 9, 1234, 1212, 1210, 1209, 8, 1218, 1201, 1203, 1206, 1208, 1213, 1219, 1216, 1214; 
    1149, 1153, 1156, 1153, 1150, 1155, 1156, 1160, 1165, 1174, 1174, 1180, 1184, 1184, 1184, 1183, 1182, 1184, 7, 1199, 1188, 1191, 1195, 1190, 1194, 1211, 1216, 1216, 1217, 1214, 1213, 1210, 1213, 1218, 1218, 7, 1235, 1225, 1221, 1224, 1222, 1221, 1215, 9, 13, 1240, 1228, 1232, 1235, 1238, 1233, 1232, 1237, 1235, 11, 1251, 1235, 1238, 1240, 1232, 1226, 1227, 8, 1240; 
    1167, 1175, 1177, 1179, 1181, 1184, 1186, 1191, 1193, 7, 1203, 1194, 1206, 1218, 1216, 1221, 1219, 1214, 1215, 1218, 7, 1233, 1226, 1227, 1227, 1230, 1229, 1228, 1227, 1222, 1222, 8, 1243, 1239, 1244, 1245, 1244, 1238, 7, 1258, 7, 1257, 9, 1259, 1247, 8, 1259, 8, 1261, 1241, 1234, 1235, 1235, 1234, 1231, 1231, 1222, 1226, 1227, 1233, 1237, 1243, 1238, 1237; 
    1192, 1198, 1200, 1208, 1207, 1209, 1211, 1211, 1212, 1212, 1211, 9, 1226, 9, 1227, 1206, 1192, 8, 1207, 1194, 1192, 1196, 1199, 1197, 1199, 1194, 1190, 7, 1206, 1192, 1195, 1190, 1195, 1196, 1196, 1193, 7, 1198, 1187, 1180, 1183, 1183, 1178, 1181, 1182, 1187, 1179, 1178, 1181, 1187, 1189, 1191, 1192, 1191, 1197, 1201, 1202, 1199, 1196, 1190, 1184, 1195, 1190, 1192; 
    10, 1168, 1164, 1166, 1168, 1173, 1177, 1182, 1176, 9, 1185, 1168, 1170, 8, 1182, 1172, 1169, 1168, 1173, 1169, 1168, 1168, 1171, 1174, 1179, 1181, 1182, 1183, 1186, 1190, 1193, 1190, 1188, 1186, 1178, 1179, 1179, 1180, 1187, 1193, 1197, 7, 1210, 1206, 1204, 1204, 1203, 1202, 1201, 1203, 1205, 1206, 1205, 1205, 1207, 1220, 1229, 1227, 8, 1246, 1229, 1223, 1223, 1224; 
    7, 8, 1220, 1208, 1213, 1217, 1217, 1221, 1220, 1217, 1217, 1220, 1223, 1228, 1237, 1237, 1235, 1233, 1230, 1222, 1220, 7, 1231, 1215, 1215, 1219, 7, 1231, 1220, 1218, 1220, 1216, 1216, 1217, 9, 8, 1238, 1212, 1197, 1196, 1193, 8, 1207, 1202, 1202, 1200, 1198, 1196, 1195, 1193, 1193, 7, 1205, 1195, 1197, 1199, 1201, 1198, 1188, 1186, 1181, 1184, 1186, 1184; 
    1174, 1188, 1190, 1192, 1191, 1193, 1193, 1198, 1201, 1201, 1200, 1198, 1202, 1219, 1225, 1227, 1230, 1226, 1221, 1226, 1225, 1227, 1229, 1232, 12, 1246, 1238, 1239, 1233, 1233, 1228, 1231, 1241, 1246, 1254, 1252, 1246, 1244, 1252, 1251, 1249, 1253, 1251, 1252, 8, 1261, 1242, 8, 1254, 1240, 8, 1253, 1239, 1237, 1229, 1230, 1235, 1241, 1252, 1257, 1258, 1256, 1215, 1218; 
    1192, 1200, 1205, 1212, 1212, 1211, 7, 1226, 7, 1226, 1217, 1219, 7, 1222, 1197, 7, 1208, 1195, 7, 1211, 1204, 1206, 1204, 1199, 1200, 1200, 1192, 1195, 1202, 1205, 1183, 1209, 10, 1239, 1177, 1183, 1180, 1198, 1194, 1201, 1184, 1191, 1177, 1183, 1173, 1167, 1186, 1198, 1190, 1200, 1188, 1206, 1213, 1211, 1197, 1207, 1205, 1193, 1188, 1206, 1190, 1211, 1214, 1215; 
    1207, 1223, 1231, 9, 1254, 1236, 1240, 7, 1259, 1242, 1243, 1247, 8, 1261, 1252, 1249, 8, 1256, 1241, 1240, 1241, 1240, 1236, 1233, 1233, 1236, 1241, 1248, 1250, 1250, 1247, 1244, 1238, 1233, 1235, 9, 1244, 7, 1241, 1232, 1228, 1230, 1231, 1232, 1229, 1226, 1225, 1228, 1227, 1215, 1205, 1205, 1206, 1206, 1211, 1213, 1210, 1208, 1207, 1204, 1204, 1202, 1201, 1203; 
    1185, 1200, 1204, 1204, 1204, 1204, 1204, 1206, 1209, 1215, 1213, 1211, 1213, 1229, 1238, 1240, 1245, 1235, 1233, 1232, 1234, 1237, 1243, 1244, 1246, 1244, 11, 1260, 1246, 1245, 1238, 1244, 1251, 1259, 1263, 1262, 1259, 1257, 1261, 1260, 1257, 1263, 1262, 1266, 1258, 1251, 1250, 7, 1264, 1249, 6, 1262, 1243, 1241, 1244, 1248, 1250, 1258, 1260, 1259, 1253, 1247, 1244, 1240; 
    1205, 1218, 1233, 1240, 7, 1250, 1237, 1235, 1227, 1227, 1229, 1219, 10, 11, 8, 1249, 1227, 1226, 1228, 1229, 1231, 1224, 1224, 1226, 1227, 1222, 1208, 1204, 1202, 1203, 1209, 1215, 1213, 1212, 1209, 1209, 1204, 1204, 1203, 1205, 1206, 1209, 7, 1224, 1209, 1203, 7, 1207, 1195, 1196, 1198, 1194, 7, 1207, 1198, 1197, 1195, 1191, 1195, 1199, 1205, 1205, 1206, 1210; 
    1196, 1205, 1213, 1219, 1228, 1237, 1240, 1234, 1233, 1237, 1228, 1226, 1224, 1219, 1222, 1222, 1220, 1225, 1224, 1224, 1223, 1222, 1220, 1222, 1225, 1211, 1199, 1200, 1199, 1201, 1209, 1209, 7, 1221, 1206, 1206, 1202, 1202, 1200, 1198, 7, 1215, 8, 1218, 1207, 1205, 1202, 1193, 1188, 1191, 1192, 1193, 1191, 1193, 1196, 1191, 1194, 1188, 1196, 1198, 1201, 9, 1217, 1205; 
    1223, 1235, 1243, 1239, 1235, 1236, 1238, 1238, 1237, 1232, 1228, 1233, 1242, 1245, 1254, 1254, 1248, 1247, 9, 1255, 1238, 1235, 1233, 1228, 1230, 1229, 1234, 7, 1246, 1235, 1234, 1232, 1230, 1231, 1233, 1227, 1210, 1210, 1211, 1209, 1215, 1218, 1216, 8, 1227, 1212, 1211, 1211, 1208, 1207, 1207, 1212, 1214, 1217, 1211, 1208, 1201, 1197, 1199, 1200, 1199, 1200, 1202, 1200; 
    1187, 1191, 1193, 1185, 1189, 1193, 1200, 1209, 1210, 1209, 1219, 1222, 1218, 1219, 1222, 1220, 1221, 1222, 1226, 1227, 1224, 1226, 1233, 1250, 1253, 1255, 1254, 1248, 1245, 1247, 1252, 1256, 1255, 1258, 1259, 1259, 1258, 1255, 1252, 1256, 1258, 1267, 1275, 1275, 1273, 1276, 1276, 1274, 1271, 1274, 1275, 1275, 1275, 1267, 1266, 1260, 1262, 1259, 1255, 1251, 1251, 1257, 1262, 1270; 
    1185, 1197, 1203, 8, 1225, 1216, 1214, 1213, 1207, 1202, 7, 1218, 1210, 1211, 1218, 1225, 1227, 1233, 1236, 9, 1246, 1233, 1232, 1234, 1233, 1236, 1237, 1237, 1239, 1238, 1253, 1266, 1261, 1265, 1271, 1275, 1246, 1282, 1280, 1250, 1285, 1284, 1265, 1276, 1265, 1263, 12, 1276, 1256, 1283, 1279, 1299, 7, 1292, 1270, 1269, 1282, 1280, 1271, 1275, 1295, 1273, 1272, 1281; 
    1237, 1239, 1248, 1256, 1272, 1275, 1277, 1276, 1274, 1279, 1278, 1278, 1285, 1282, 1286, 1280, 1275, 1272, 1273, 1271, 1270, 1263, 1260, 1265, 1273, 1272, 1283, 1284, 1279, 1275, 1272, 1264, 1263, 1261, 1257, 1253, 1254, 1260, 1259, 1258, 1256, 1255, 1253, 7, 8, 1278, 1257, 1244, 1234, 1233, 1230, 6, 1242, 1237, 1237, 1236, 1233, 1231, 1230, 1230, 7, 1242, 1229, 1231; 
];
 
ChargingProbes = [
    1045, 1042, 1039, 1038, 1035, 1035, 1035, 1035, 1034, 1034, 1031, 1033, 1032, 120, 1034, 1036, 1037, 131, 1034, 121, 115, 1035, 1037, 1037, 132, 1037, 1037, 1038, 1038, 135, 1037, 131, 1038, 135, 133, 133, 1036, 135, 1038, 1037, 1035, 1036, 1035, 1034, 1033, 1032, 1033, 1030, 134, 131, 1031, 1033, 1034, 1036, 1038, 1035, 1037, 1035, 1033, 1033, 1033, 1032, 1029, 1032; 
    1236, 1215, 1198, 1189, 1188, 1185, 1187, 1192, 130, 1191, 1193, 1193, 1202, 1198, 1199, 1198, 1195, 1193, 132, 1193, 1196, 1199, 1200, 130, 1193, 1196, 1207, 1217, 1221, 1223, 1224, 1221, 1218, 1219, 1219, 1219, 1224, 1225, 1227, 1228, 1230, 1231, 1225, 1224, 1221, 1224, 1232, 1234, 1239, 1240, 1239, 1239, 1243, 1243, 1243, 144, 1243, 1244, 1251, 1247, 1245, 1243, 1239, 1237; 
    1330, 1301, 1280, 1270, 1267, 1270, 1265, 1260, 1260, 1258, 1251, 1249, 143, 1243, 1248, 1243, 1226, 1219, 1215, 132, 1208, 1211, 1217, 1216, 133, 1212, 1212, 1207, 1206, 1205, 1203, 129, 1196, 1203, 128, 1200, 1207, 131, 1203, 1201, 127, 1190, 1188, 1185, 1188, 1189, 1188, 1187, 1187, 124, 1182, 1180, 1180, 1180, 1185, 1190, 1192, 1192, 1195, 1198, 1203, 1207, 1207, 1203; 
    1348, 1304, 1292, 1281, 1290, 155, 1303, 1300, 1305, 1299, 1296, 1291, 1290, 1293, 1293, 1295, 1299, 1302, 1307, 1304, 1301, 1299, 1294, 1298, 1304, 1311, 1318, 1321, 1318, 1321, 1324, 1322, 1323, 1325, 1325, 1332, 1326, 1323, 1319, 1314, 1311, 1309, 1304, 1298, 1296, 1299, 1302, 1307, 1314, 1318, 1314, 1310, 1303, 1295, 1291, 1290, 1280, 1278, 1278, 1281, 1279, 1278, 1278, 1273; 
    1383, 1355, 1343, 1339, 1338, 1335, 1331, 1333, 1349, 1360, 1366, 1366, 1365, 1356, 1357, 1359, 1363, 1364, 1369, 1371, 1374, 1375, 1372, 155, 1361, 1363, 1368, 1379, 1388, 1395, 1392, 1392, 1394, 1396, 1398, 1401, 1405, 1406, 1402, 1395, 1388, 1388, 1384, 1379, 1369, 1362, 1366, 1375, 1376, 1392, 1394, 1390, 1381, 1373, 1363, 1364, 1360, 1349, 1348, 1348, 1346, 1346, 1347, 1345; 
    1022, 1017, 1018, 1016, 1015, 1014, 1014, 1012, 1012, 128, 1012, 1012, 1012, 130, 1013, 1014, 125, 1014, 1014, 1015, 1016, 1015, 1015, 131, 97, 1015, 1015, 1014, 1013, 1012, 1012, 1012, 1013, 130, 1013, 1015, 126, 1016, 1017, 1016, 1018, 130, 1018, 1018, 1017, 1018, 26, 160, 1017, 1017, 1019, 1018, 130, 1018, 1018, 1018, 1016, 1017, 1021, 1022, 1023, 132, 1022, 110; 
    1027, 1025, 1025, 1023, 1025, 1024, 1025, 1025, 1025, 1025, 1024, 1025, 1024, 1025, 1025, 1026, 129, 1024, 1023, 1023, 1024, 1023, 104, 1023, 1022, 1020, 1021, 1021, 128, 1020, 127, 1021, 1023, 129, 1023, 1025, 1023, 1026, 132, 1022, 128, 126, 1021, 1022, 1020, 1021, 1018, 1018, 119, 128, 128, 1017, 1017, 1021, 127, 1018, 1018, 1018, 1016, 1018, 1016, 1016, 129, 1016; 
    1126, 1113, 1107, 1098, 1095, 1096, 1093, 121, 1091, 1092, 1092, 1094, 1093, 1089, 1086, 1084, 1080, 1080, 1082, 1083, 1079, 1079, 1081, 113, 122, 1077, 1076, 123, 122, 1075, 1077, 1080, 1081, 1082, 1085, 1084, 1086, 1087, 1090, 1090, 1090, 1088, 1085, 1084, 127, 1078, 1079, 1081, 1084, 1085, 1088, 1090, 1093, 1093, 1096, 1095, 1095, 114, 1091, 1093, 1094, 1094, 1095, 1096; 
    1144, 1130, 1120, 1118, 1117, 1118, 1119, 1118, 1120, 1119, 116, 109, 1119, 1122, 117, 1120, 119, 1117, 1117, 1115, 1110, 1110, 1111, 126, 1110, 1117, 1117, 1120, 1120, 1123, 118, 1124, 1125, 130, 125, 1123, 1124, 1122, 1123, 1124, 1125, 1127, 1128, 1124, 1127, 1130, 1138, 1143, 1144, 1144, 1143, 1143, 1141, 1142, 1141, 1141, 1142, 1147, 1148, 1150, 1149, 1151, 1148, 1144; 
    1252, 144, 1222, 1215, 1215, 1217, 1217, 139, 1218, 1217, 1219, 1213, 1216, 1214, 1212, 1214, 1216, 1216, 1214, 1211, 1207, 134, 1205, 1203, 1202, 1198, 1196, 1191, 1192, 1196, 1198, 1201, 1207, 1206, 1202, 1201, 1199, 1190, 1191, 1190, 1184, 1181, 1180, 1182, 1182, 1183, 1183, 1181, 1180, 1177, 1177, 1178, 1177, 1166, 1161, 1159, 1157, 1155, 121, 1156, 1158, 1161, 1160, 122; 
    1254, 1234, 1212, 1200, 1195, 1188, 1189, 1190, 1190, 1191, 1190, 1189, 125, 115, 1178, 1177, 1176, 1175, 1177, 1176, 122, 1177, 1182, 1181, 1173, 1168, 119, 109, 1159, 1163, 1163, 1166, 1161, 1161, 1164, 117, 1160, 1159, 1159, 1160, 1164, 117, 1164, 1167, 1168, 1170, 1173, 1175, 1178, 1178, 1175, 1171, 1169, 1164, 1164, 1167, 120, 109, 111, 1165, 1172, 1175, 122, 1178; 
    1288, 1274, 1270, 1264, 1260, 1252, 1244, 1239, 133, 1232, 1230, 1227, 1228, 130, 1227, 1229, 1229, 1229, 1225, 1224, 1222, 1223, 1225, 1217, 1207, 1200, 1201, 1197, 1199, 124, 1203, 1202, 1200, 1199, 1196, 1198, 1193, 1193, 121, 1189, 1191, 1192, 1195, 124, 1194, 1192, 1187, 1181, 1179, 1178, 1179, 1179, 1179, 1178, 1177, 1177, 1175, 1173, 1176, 1182, 1185, 1185, 1186, 1187; 
    1257, 1241, 1229, 1221, 1216, 1208, 1202, 1203, 1203, 1208, 124, 112, 1209, 1211, 1215, 1219, 1222, 1220, 1220, 1218, 1217, 1216, 1218, 1218, 1218, 1220, 1217, 1223, 1234, 1239, 1243, 1243, 1242, 1236, 1237, 1238, 130, 1237, 1239, 1242, 1246, 1246, 1248, 1249, 1245, 1244, 1240, 1245, 1252, 133, 1255, 1260, 1258, 1259, 1262, 1263, 1256, 1259, 1261, 1260, 139, 1260, 1257, 1254; 
    1253, 1229, 1221, 1218, 1221, 1222, 1225, 1225, 128, 1226, 1230, 1229, 1226, 1225, 1224, 1224, 1225, 1226, 1227, 1226, 1225, 1229, 1241, 1249, 1249, 1250, 1249, 134, 1241, 1242, 1245, 1244, 1248, 1251, 1250, 1253, 1253, 1253, 1252, 1248, 1247, 1251, 1258, 1263, 1266, 1263, 1264, 1266, 1266, 1263, 1264, 1268, 1268, 1270, 1264, 1260, 1258, 1255, 1256, 1257, 134, 1247, 1245, 1244; 
    1288, 1273, 1266, 1261, 1259, 1252, 1255, 1251, 1254, 1242, 1229, 1228, 1225, 1226, 1228, 1232, 1232, 1228, 1225, 1222, 125, 1217, 1217, 125, 1215, 1219, 124, 113, 1215, 1222, 1223, 1219, 1211, 1206, 1204, 1204, 121, 1204, 121, 1200, 120, 1196, 1203, 1203, 1200, 1202, 1201, 1205, 1210, 122, 112, 1210, 1214, 1213, 1218, 123, 1220, 1223, 1222, 1220, 1217, 1208, 1206, 1209; 
    1320, 1304, 1301, 1300, 1303, 1307, 1301, 1298, 1291, 1284, 1279, 1282, 1269, 1268, 1269, 1268, 1269, 1270, 1266, 133, 1263, 1261, 1263, 1266, 1263, 1251, 1242, 1240, 1236, 1236, 1242, 1243, 1239, 1237, 1240, 1234, 123, 1230, 1229, 1228, 1231, 1232, 1234, 1235, 127, 112, 1227, 1223, 1219, 1214, 1217, 1220, 1217, 1216, 1217, 121, 1213, 1212, 1214, 1217, 1221, 1226, 1226, 122; 
    1316, 1300, 1295, 1291, 1287, 1286, 1283, 1281, 1277, 1279, 132, 1275, 1271, 1255, 1250, 1247, 1248, 1253, 1254, 1250, 1249, 127, 1246, 1245, 1243, 1242, 1240, 1238, 1243, 1245, 1249, 1243, 123, 1233, 1229, 1226, 1228, 1231, 1228, 120, 1223, 117, 1224, 119, 1222, 1224, 118, 1220, 118, 1223, 1231, 1235, 1236, 1237, 1238, 1242, 1251, 1248, 1243, 1240, 1235, 1229, 1230, 1233; 
    1321, 1301, 1299, 1296, 1293, 1286, 1279, 1279, 1280, 1281, 1284, 1281, 130, 1274, 127, 1277, 1292, 1301, 134, 1303, 1304, 1299, 1293, 1295, 1294, 1298, 1299, 1300, 135, 1303, 1306, 1305, 1300, 1295, 1295, 1299, 1306, 134, 1310, 1319, 1314, 1311, 1312, 1314, 1313, 1315, 1321, 1316, 1316, 1308, 1303, 1302, 1299, 1300, 1297, 1291, 1289, 1293, 1294, 1297, 1305, 1310, 1308, 1303; 
    1341, 145, 1319, 1314, 1310, 1304, 1299, 1294, 1291, 1298, 135, 1303, 1311, 1311, 140, 1304, 1304, 1307, 1305, 1305, 1304, 1304, 1308, 1303, 1296, 1293, 1290, 1290, 1288, 1285, 1278, 1280, 1282, 1287, 1289, 1297, 1296, 1293, 1290, 1281, 1273, 1272, 130, 1265, 1266, 1265, 1265, 1268, 1268, 1267, 1265, 1263, 1261, 1263, 1264, 1256, 1243, 1240, 1233, 122, 1236, 1241, 1244, 1242; 
    137, 128, 119, 1275, 1270, 1268, 1267, 1263, 1263, 1266, 1267, 1265, 1262, 1256, 1250, 1241, 1245, 1246, 1252, 1257, 1259, 1259, 127, 1263, 1266, 1269, 1268, 124, 1260, 1263, 1265, 1266, 1267, 1268, 1266, 125, 115, 1263, 1281, 1292, 1294, 1296, 129, 1284, 1281, 1283, 1285, 1287, 1289, 1295, 1293, 1293, 134, 1291, 1294, 1289, 1285, 1290, 1297, 1303, 1308, 1307, 1306, 1305; 
    1321, 1300, 1293, 1288, 1286, 1284, 1283, 1284, 1281, 1279, 1278, 1277, 1277, 1266, 1251, 1251, 1248, 1252, 1255, 1257, 1259, 1252, 1251, 1245, 1244, 120, 1241, 1244, 1244, 1245, 1251, 1250, 1246, 1238, 1233, 1231, 1233, 1235, 1232, 1234, 1234, 1232, 1230, 1227, 1231, 119, 1236, 1241, 123, 1240, 1244, 122, 1242, 1248, 1254, 1252, 1250, 1244, 1239, 1243, 1253, 1224, 1252, 1228; 
    1326, 1308, 1295, 1287, 1286, 1281, 1282, 129, 1283, 128, 1278, 1277, 1280, 129, 1293, 1302, 133, 1302, 1303, 134, 1293, 1294, 1295, 1297, 1296, 1300, 1301, 1306, 1297, 1310, 1285, 1274, 1320, 133, 1282, 1291, 1315, 1319, 1325, 1322, 1325, 1311, 1297, 1315, 1301, 1321, 1294, 1286, 1302, 1294, 1292, 1296, 1305, 1297, 1284, 1292, 1292, 1296, 1297, 1315, 1316, 1303, 1304, 1292; 
    1306, 1280, 1265, 1251, 123, 1251, 1253, 1255, 121, 1247, 1249, 1246, 1245, 119, 1241, 1240, 1249, 118, 1251, 1252, 1255, 1257, 1258, 1262, 1266, 1263, 1256, 1254, 1246, 1245, 1249, 1250, 1259, 1259, 1264, 1262, 126, 1272, 126, 1268, 1272, 1269, 1269, 1268, 1271, 1272, 1273, 1272, 1271, 1275, 1291, 1294, 1297, 1299, 1294, 1288, 1288, 1291, 1292, 1292, 1298, 1298, 1301, 1299; 
    1336, 1314, 1305, 1301, 1301, 1298, 1298, 1295, 1290, 1288, 1290, 1288, 1288, 1276, 1263, 1262, 1260, 1262, 1267, 1268, 1267, 1264, 1262, 1259, 1256, 1256, 1255, 121, 1255, 1260, 1260, 1260, 1254, 1249, 1245, 1238, 1245, 1246, 1240, 1244, 1245, 1243, 1239, 1239, 1246, 1250, 1252, 1254, 120, 1254, 1256, 122, 1261, 1268, 1266, 1262, 1259, 1253, 1246, 1251, 1253, 1260, 1262, 1267; 
    1313, 1290, 1275, 1266, 1265, 123, 1263, 1268, 1273, 1275, 1272, 1279, 1280, 127, 115, 112, 1271, 1276, 1273, 1274, 1275, 1277, 1276, 1278, 1274, 1278, 1290, 1302, 1302, 1302, 1302, 1294, 1294, 1294, 1296, 1298, 1299, 1304, 1302, 1302, 1302, 1298, 1295, 131, 1292, 1305, 1312, 131, 1314, 1315, 1314, 1312, 1316, 132, 1307, 1314, 1313, 1315, 1317, 1311, 1306, 1301, 1301, 1299; 
    1305, 1292, 1282, 1275, 1268, 1262, 1252, 1251, 1253, 1254, 1263, 1266, 1267, 1268, 1276, 1273, 1271, 1267, 1267, 1267, 1268, 1270, 1270, 1268, 1267, 1276, 1288, 1293, 1293, 1292, 1290, 1287, 1286, 130, 1284, 1287, 1292, 1294, 1295, 1296, 1293, 132, 1289, 130, 1285, 1286, 1292, 1302, 1305, 1309, 1303, 1304, 1307, 1307, 1305, 1309, 1309, 1313, 1309, 1302, 1299, 1297, 130, 1291; 
    1293, 1274, 1266, 1264, 1265, 1264, 1265, 1267, 1268, 1272, 1273, 1269, 1265, 1265, 1255, 1251, 1253, 1253, 1258, 123, 1262, 1268, 1268, 1273, 1276, 1278, 1274, 1274, 124, 1270, 1274, 1276, 1280, 1279, 1277, 1278, 1291, 1300, 1305, 1306, 1301, 1297, 1295, 1299, 131, 1295, 1301, 1301, 1305, 1305, 1304, 1302, 1303, 1300, 1301, 1306, 1316, 1321, 1316, 1316, 1316, 1319, 1316, 1317; 
    1348, 1333, 1328, 1333, 1335, 1326, 1324, 1318, 1309, 1301, 1302, 1293, 1293, 1292, 1294, 1298, 1297, 1294, 1291, 1291, 1288, 1288, 1289, 1270, 1262, 1261, 1262, 1266, 1268, 1268, 1266, 1266, 1264, 1258, 1261, 1256, 1256, 1261, 1262, 1266, 1265, 1257, 1251, 1249, 1247, 1252, 1254, 1248, 1251, 1250, 1249, 1249, 1248, 1253, 1259, 1261, 1263, 1265, 1264, 1273, 1274, 1272, 1266, 1266; 
    1372, 1354, 1344, 1334, 135, 1325, 1330, 1332, 1331, 1341, 1348, 135, 1337, 1333, 1325, 1318, 1314, 1314, 1306, 1304, 128, 1303, 1304, 1308, 1306, 1304, 1300, 1296, 1300, 1303, 1292, 1275, 1274, 1270, 1277, 1288, 1274, 1274, 1300, 1265, 1269, 1290, 1270, 1270, 1260, 1277, 1267, 117, 1263, 1266, 1257, 1254, 1256, 121, 1264, 1242, 1236, 1267, 1255, 1247, 1242, 1258, 1254, 1262; 
    1331, 1315, 1309, 1299, 1286, 1284, 1277, 1278, 1281, 1275, 1274, 1273, 1272, 1271, 1270, 1269, 1277, 1279, 1280, 1281, 1283, 1288, 1290, 1292, 1287, 1285, 1276, 1268, 1273, 1275, 1280, 1290, 1292, 1293, 1299, 1301, 1298, 1297, 1298, 1296, 1296, 1301, 1301, 1301, 127, 114, 1293, 1302, 1324, 1331, 1330, 1329, 133, 1319, 1316, 1316, 1323, 1323, 1329, 1330, 1332, 132, 1328, 1329; 
];
 
Temperature = [
    24.6, 24.6, 24.6, 24.6, 24.6, 24.5, 24.6, 24.5, 24.5, 24.5, 24.5, 24.5, 24.4, 24.4, 24.4, 24.4, 24.4, 24.4, 24.4, 24.4, 24.4, 24.3, 24.3, 24.3, 24.3, 24.3, 24.3, 24.3, 24.2, 24.2;
]';
 
Humidity = [
    46.1, 46.1, 46.1, 46.0, 46.0, 45.9, 45.9, 45.8, 45.8, 45.8, 45.8, 45.8, 45.8, 45.8, 45.8, 45.8, 45.9, 45.9, 45.9, 45.9, 46.0, 46.0, 46.1, 46.1, 46.1, 46.1, 46.2, 46.2, 46.2, 46.3;
]';
 
% wyniki pojedynczych pomiarów
Capacity = [ 
    % pierwszy wiersz - pojemności z czasu ładowania
    CapacityFromCharging(Oversampling(ChargingProbes));
    % wiersz drugi - pojemności z czasu rozładowania
    CapacityFromDischarging(Oversampling(DischargingProbes)) 
] * 1E12;
 
% średnia wartość pojemności
CapacityWithoutCorrection = mean(Capacity);
% pojemność właściwa - po korekcji
C = Correction(CapacityWithoutCorrection); 
 
%% Twój Kod
 
 
 
%% Wyznaczenie charakterystyk
PrintResults(Capacity, ChargingProbes, DischargingProbes);
MeasurementTimePlt();
if size(Humidity, 1) > 1
    HumidityPlt(ChargingProbes, DischargingProbes, Humidity, Temperature);
    GenerateHistogram(ChargingProbes, DischargingProbes);
    GenerateRandomErrorPlot(ChargingProbes, DischargingProbes);
end
%GenerateSignals(2);


%% Definicje funkcji
% Funkcja wyznaczająca wartość pojemności
function C = CapacityFromCharging(Time)
    global H_THR L_THR H_VOUT J R VcapFun
    syms s t Cap Res Vout Vcstart Vcstop Jbias;
    Cfun = isolate(VcapFun, Cap);
    C = eval(rhs(subs(Cfun, {Res, t, Vout, Vcstart, Vcstop, Jbias}, ...
        {R, Time, H_VOUT, L_THR, H_THR, J})));
end
function C = CapacityFromDischarging(Time)
    global H_THR L_THR L_VOUT J R VcapFun
    syms s t Cap Res Vout Vcstart Vcstop Jbias;
    Cfun = isolate(VcapFun, Cap);
    C = eval(rhs(subs(Cfun, {Res, t, Vout, Vcstart, Vcstop, Jbias}, ...
        {R, Time, L_VOUT, H_THR, L_THR, J})));
end
 
% Funkcja wyznaczająca czas ładowania pojemności
function Time = ChargingTime(Resistance, Capacity)
    global H_THR L_THR H_VOUT J VcapFun
    syms s t Cap Res Vout Vcstart Vcstop Jbias;
    Tfun = isolate(VcapFun, t);
    Time = eval(rhs(subs(Tfun, {Res, Cap, Vout, Vcstart, Vcstop, Jbias}, ...
        {Resistance, Capacity, H_VOUT, L_THR, H_THR, J})));
end
 
% Funkcja wyznaczająca czas rozładowania pojemności
function Time = DischargingTime(Resistance, Capacity)
    global H_THR L_THR L_VOUT J VcapFun
    syms s t Cap Res Vout Vcstart Vcstop Jbias;
    Tfun = isolate(VcapFun, t);
    Time = eval(rhs(subs(Tfun, {Res, Cap, Vout, Vcstart, Vcstop, Jbias}, ...
        {Resistance, Capacity, L_VOUT, H_THR, L_THR, J})));
end
 
% Wyznaczenie maksymalnego zakresu badanych pojemności
function[C_min, C_max] = CapacityRange(Ticks_min, Ticks_max)
    C_min = max([CapacityFromCharging(Ticks_min / 16E6)...
        CapacityFromDischarging(Ticks_min / 16E6)]) ;
    C_max = min([CapacityFromCharging(Ticks_max / 16E6)...
        CapacityFromDischarging(Ticks_max / 16E6)]);
end
 
% Funkcja implementująca Oversampling
function Time = Oversampling(TicksIn)
    temp = 16 - ceil(log2(max(TicksIn)));
    bits = 3;
    if temp < 4
        bits = temp;
    end
    N = power(4, bits);
    sum = 0;
    for i = (size(TicksIn, 2) - N + 1):1:(size(TicksIn, 2))
        sum = sum + TicksIn(i);
    end
    result = bitshift(sum, -bits);
    Time = result * power(2, -bits) / 16E6;
end
 
% Korekcja wartości pojemności
function Cout = Correction(Cin)
    global A;
    C = Cin;
    if Cin > 1
        C = Cin * 1E-12;
    end
    Cout = polyval(A, C) * 1E12;
end
 
% Wyznaczenie temperatury punktu rosy
function DP = DewPoint(T, RH)
    DP = power(RH / 100.0, 0.125) * (112 + 0.9 * T) + 0.1 * T - 112;
end

% Wyświetl komunikaty
function PrintResults(Capacity, ChargingProbes, DischargingProbes)
    global C A;
    CapacityWithoutCorrection = mean(Capacity);
    fprintf('Capacity Average Value (charging):    %3.4f pF     [ %3.4f us ]\n', ...
        mean(Capacity(1,:)), Oversampling(ChargingProbes) * 1E6);
    fprintf('Capacity Average Value (discharging): %3.4f pF     [ %3.4f us ]\n\n', ...
        mean(Capacity(2,:)), Oversampling(DischargingProbes) * 1E6);
    fprintf('    Measured Capacity: %3.4f pF\n\n', CapacityWithoutCorrection);
    fprintf('    Capacity With Correction: %3.4f pF\n\n', C);
    fprintf('Correction Poly: [%1.4e %1.4e %1.4e %1.4e]\n', A);
    fprintf('Maximum random error (charging):    %3.0f ticks\n', max(max(ChargingProbes) - min(ChargingProbes)));
    fprintf('Maximum random error (discharging): %3.0f ticks\n\n', max(max(DischargingProbes) - min(DischargingProbes)));
end

% Wyznaczenie charakterystyki czasu pomiaru
function MeasurementTimePlt()
    global R C;
    figure('Name', 'Time of measurements');
    Caxis = (100:20:300);
    Taxis = [
        ChargingTime(R, Caxis * 1E-12);
        DischargingTime(R, Caxis * 1E-12)
    ] * 1E6;
    subplot(2, 1, 1);
    plot(Caxis, Taxis(1,:), Caxis, Taxis(2,:));
    title("Measurement time depends on Capacity[R = "+R * 1E-3+" kOhm]");
    legend('ChargingTime', 'DischargingTime');
    xlabel('Capacity [pF]'); ylabel('Time [us]');

    Raxis = 10E3:10E3:1E6;
    Taxis = [
        ChargingTime(Raxis, C * 1E-12);
        DischargingTime(Raxis, C * 1E-12)
    ] *1E6;
    subplot(2, 1, 2);
    plot(Raxis * 1E-3, Taxis(1,:), Raxis * 1E-3, Taxis(2,:));
    title("Measurement time depends on Resistance  [C = " + C + " pF]");
    legend('ChargingTime', 'DischargingTime');
    xlabel('Resistance [kOhm]'); ylabel('Time [us]');
end

% Wyznaczenie charakterystyki wilgotności(czujnik HS1101)
function HumidityPlt(ChargingProbes, DischargingProbes, Humidity, Temp)
    HS1101_min = 161; HS1101_max = 193;
    Capacity = [];
    DP = [];
    for i = 1:1:size(Humidity, 1)
        DP = [DP DewPoint(Temp(i), Humidity(i))];
        Capacity = [Capacity mean([...
            CapacityFromCharging(Oversampling(ChargingProbes(i,:))) * 1E12...
            CapacityFromDischarging(Oversampling(DischargingProbes(i,:))) * 1E12])];
    end
    CorrectCapacity = Correction(Capacity);
    RH = (CorrectCapacity - HS1101_min)./ (HS1101_max - HS1101_min) * 100.0;
    for i = 1:1:size(RH, 2)
        if RH(i) > 100
            RH(i) = 100;
        elseif RH(i) < 0
            RH(i) = 0;
        end
    end
    figure('Name', 'Humidity');
    subplot(2, 1, 1);
    N = 1:1:size(Humidity, 1);
    plot(N, RH, N, Humidity);
    title('Humidity');
    xlabel('N'); ylabel('RH [%]');
    legend('HS1101', 'SHTC3');
    xlim([1 N(end)]);
    subplot(2, 1, 2);
    plot(N, Temp, N, DP);
    title('Temperature');
    xlabel('N'); ylabel('Temperature [°C]');
    legend('Temperature', 'DewPoint');
    xlim([1 N(end)]);
end

% Funkcja wyznaczająca przebiegi czasowe:
function GenerateSignals(n_periods)
    global H_VOUT L_VOUT J C R H_THR L_THR;
    syms s t Cap Res Vout Vcstart Jbias;
    Vlaplace(Vout, Jbias, Cap, Res, Vcstart, s) = ...
    (Cap * Vcstart + Vout / Res / s - Jbias / s) / (1 / Res + s * Cap);
    Vcap_t = matlabFunction(ilaplace(Vlaplace));
    VCAP = []; S_THR = []; SIGNAL = [];
    TIME = 0; tc = []; td = [];
    V = 0; state = 0;
    step = 1E-9;
    for t = 0:step:1000E-6
        if state == 0
            % charging
            V = Vcap_t(H_VOUT, J, C * 1E-12, R, L_THR, t - TIME);
            VCAP(end + 1) = V;
            SIGNAL(end + 1) = H_VOUT;
            S_THR(end + 1) = L_VOUT;
            if V > H_THR
                tc(end + 1) = t - TIME;
                TIME = t;
                state = 1;
                S_THR(end) = H_VOUT;
            end
        else
            % discharging
            V = Vcap_t(L_VOUT, J, C * 1E-12, R, H_THR, t - TIME);
            VCAP(end + 1) = V;
            SIGNAL(end + 1) = L_VOUT;
            S_THR(end + 1) = L_VOUT;
            if V < L_THR
                td(end + 1) = t - TIME;
                TIME = t;
                state = 0;
                S_THR(end) = H_VOUT;
                if TIME >= n_periods * (tc(1) + td(1))
                    break;
                end
            end
        end
    end
    time = 0:step: (n_periods * (tc(1) + td(1)));

    % Przebieg napięcia na pojemności
    figure('Name', 'Measurement System Signals');
    subplot(3, 1, 1);
    plot(time * 1E6, VCAP(1, 1:size(time, 2)));
    xlabel("Time [us]"); ylabel("Capacitor Voltage[V]");
    title("Capacitor Voltage Plot");
    axis([0 time(end) * 1E6 L_THR H_THR]);


    % Przebieg przekroczenia progów napięcia:
    subplot(3, 1, 2);
    plot(time * 1E6, S_THR(1, 1:size(time, 2)));
    xlabel("Time [us]"); ylabel("Voltage [V]");
    title("Signal of exceeding the voltage threshold [S-THR]");
    axis([0 time(end) * 1E6 0 6]);

    % przebieg sygnału z MK:
    subplot(3, 1, 3);
    plot(time * 1E6, SIGNAL(1, 1:size(time, 2)));
    xlabel("Time [us]");
    ylabel("Voltage [V]");
    title("Microcontroller Signal");
    axis([0 time(end) * 1E6 0 6]);
end

function GenerateHistogram(Charging, Discharging)
    hist = [];
    Capacity = ...
        (CapacityFromCharging(Charging/16E6) + ...
            CapacityFromDischarging(Discharging/16E6))/2 * 1E12;
    CapCorr = [];
    for i = 1:1:size(Capacity, 1)
        CapCorr = [CapCorr Correction(Capacity(i))];
    end
    figure('Name', 'Histogram');
    histogram(CapCorr);
    xlabel('pojemność C [pF]');
    ylabel('liczba wystąpień');
end
function GenerateRandomErrorPlot(ChargingProbes, DischargingProbes)
    CP = []; DP = [];
    for i = 1:1:size(ChargingProbes, 1)
        CP = [CP mean(ChargingProbes(i, :))];
        DP = [DP mean(DischargingProbes(i, :))];
    end
    N = 1:1:size(ChargingProbes, 1);
    figure('Name', 'Charging')
    subplot(2, 1, 1)
    plot(N, (max(CP)-CP));
    xlabel('numer pomiaru');
    ylabel('błąd losowy [cykle zegara]');
    subplot(2, 1, 2)
    plot(N, (max(CP)-CP)/max(CP)*100);
    xlabel('numer pomiaru');
    ylabel('random error [%]');
    figure('Name', 'Discharging')
    subplot(2, 1, 1)
    plot(N, (max(DP)-DP));
    xlabel('numer pomiaru');
    ylabel('random error [ticks]');
    subplot(2, 1, 2)
    plot(N, (max(DP)-DP)/max(DP)*100);
    xlabel('numer pomiaru');
    ylabel('random error [%]');
end

